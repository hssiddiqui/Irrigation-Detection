{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"9Ll3cxjbC2Fk","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1671684492972,"user_tz":360,"elapsed":11340,"user":{"displayName":"Terence Conlon","userId":"08804272709395281283"}},"outputId":"053069a7-e688-4b2e-f200-ef3898e12955"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting geopandas\n","  Downloading geopandas-0.12.2-py3-none-any.whl (1.1 MB)\n","\u001b[K     |████████████████████████████████| 1.1 MB 5.2 MB/s \n","\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.8/dist-packages (from geopandas) (21.3)\n","Requirement already satisfied: shapely>=1.7 in /usr/local/lib/python3.8/dist-packages (from geopandas) (2.0.0)\n","Collecting pyproj>=2.6.1.post1\n","  Downloading pyproj-3.4.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.8 MB)\n","\u001b[K     |████████████████████████████████| 7.8 MB 47.1 MB/s \n","\u001b[?25hRequirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.8/dist-packages (from geopandas) (1.3.5)\n","Collecting fiona>=1.8\n","  Downloading Fiona-1.8.22-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (16.6 MB)\n","\u001b[K     |████████████████████████████████| 16.6 MB 80.8 MB/s \n","\u001b[?25hCollecting munch\n","  Downloading munch-2.5.0-py2.py3-none-any.whl (10 kB)\n","Collecting click-plugins>=1.0\n","  Downloading click_plugins-1.1.1-py2.py3-none-any.whl (7.5 kB)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (2022.12.7)\n","Requirement already satisfied: click>=4.0 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (7.1.2)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (57.4.0)\n","Requirement already satisfied: attrs>=17 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (22.1.0)\n","Collecting cligj>=0.5\n","  Downloading cligj-0.7.2-py3-none-any.whl (7.1 kB)\n","Requirement already satisfied: six>=1.7 in /usr/local/lib/python3.8/dist-packages (from fiona>=1.8->geopandas) (1.15.0)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (2022.6)\n","Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (1.21.6)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.8/dist-packages (from pandas>=1.0.0->geopandas) (2.8.2)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from packaging->geopandas) (3.0.9)\n","Installing collected packages: munch, cligj, click-plugins, pyproj, fiona, geopandas\n","Successfully installed click-plugins-1.1.1 cligj-0.7.2 fiona-1.8.22 geopandas-0.12.2 munch-2.5.0 pyproj-3.4.1\n"]}],"source":["## Imports\n","import ee\n","from google.colab import auth\n","import tensorflow as tf\n","import folium\n","from google.cloud import storage\n","from tqdm import tqdm\n","import pandas as pd\n","from copy import copy\n","import time\n","from glob import glob\n","import matplotlib.pyplot as plt\n","import numpy as np\n","from shapely.geometry import box\n","import json\n","\n","## Install and import geopandas\n","!pip install geopandas\n","import geopandas as gpd"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gE26e4lGanEF"},"outputs":[],"source":["## Authentication cell\n","\n","# Authenticate Google account\n","auth.authenticate_user()\n","\n","# # Trigger the authentication flow.\n","# ee.Authenticate()\n","\n","## Another way to authenticate: go to https://console.cloud.google.com/iam-admin/serviceaccounts/details/117440268112173936459?authuser=1&project=modi-lab\n","## add another key, download and upload the JSON file, then point to it below in ee.ServiceAccountCredentials,\n","\n","credential_str = '/content/modi-lab-25ef664099c4.json'\n","service_account = 'gee-model-deploy@modi-lab.iam.gserviceaccount.com'\n","credentials = ee.ServiceAccountCredentials(service_account, credential_str)\n","ee.Initialize(credentials)\n","\n","# Define bucket\n","bucket_name = 'gee_irrigation_detection'\n","\n","# Define UTM CRS\n","utm_crs = 'EPSG:32637'"]},{"cell_type":"markdown","metadata":{"id":"Qwwd6dCkA_K4"},"source":["# Prepare Imagery"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nskHU1ESD4oI"},"outputs":[],"source":["geometry = ee.FeatureCollection(\"FAO/GAUL/2015/level1\") \\\n","              .filter(ee.Filter.eq('ADM0_NAME','Ethiopia')) \\\n","              .filter(ee.Filter.eq('ADM1_NAME','Amhara'))\n","\n","\n","imageCollection = ee.ImageCollection('COPERNICUS/S2_SR').filterBounds(geometry)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aa78vCGl6orf"},"outputs":[],"source":["#Sentinel Cloud Masking Function\n","def maskCloudAndShadowsSR(image):\n","  cloudProb = image.select('MSK_CLDPRB')\n","  snowProb = image.select('MSK_SNWPRB')\n","  cloud = cloudProb.lt(5)\n","  snow = snowProb.lt(5)\n","  scl = image.select('SCL')\n","  shadow = scl.eq(3); # 3 = cloud shadow\n","  cirrus = scl.eq(10); # 10 = cirrus\n","  # Cloud probability less than 5% or cloud shadow classification\n","  mask = (cloud.And(snow)).And(cirrus.neq(1)).And(shadow.neq(1))\n","  return image.updateMask(mask) \\\n","      .select(\"B.*\") \\\n","      .copyProperties(image, [\"system:time_start\"])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"-JdaT0VL8G2K"},"outputs":[],"source":["# create list of size n for number of desired scenes\n","# 36 scenes per year: 10 days per scene\n","dayCount = ee.List.sequence(0, 363, 10.1)\n","\n","def func_qkh(x):\n","  return ee.Number(x).floor()\n","\n","dayCount = dayCount.map(func_qkh)\n","\n","# run through the image collection and generate monthly median images\n","\n","def func_vav(m):\n","  #set start date\n","\n","  startMonth = ee.Number(6)\n","  startYear = ee.Number(2020)\n","  startDay = ee.Number(1)\n","\n","  startDate = ee.Date.fromYMD(startYear, startMonth, startDay).advance(m, 'day')\n","  #set end date to 10 days after start date\n","  endDate = startDate.advance(10, 'day')\n","  #filter collection to images between start and end date\n","  filtered = imageCollection.filterDate(startDate, endDate)\n","\n","  # mask for clouds and then take the monthly median composite\n","  composite = filtered.map(maskCloudAndShadowsSR).median()\n","  return composite \\\n","      .set('month', startDate) \\\n","      .set('system:time_start', startDate.millis())\n","\n","composites = ee.ImageCollection.fromImages(dayCount.map(func_vav))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Kv4UQNiN8Yqz"},"outputs":[],"source":["#Add EVI band to each image in the collection\n","def addEVI(image):\n","\n","  image = image.float()\n","  evi = image.expression('2.5 * ((NIR - RED) / (1 + NIR + 6 * RED - 7.5 * BLUE))',\n","    {'NIR': image.select('B8').divide(10000),\n","     'RED': image.select('B4').divide(10000),\n","     'BLUE': image.select('B2').divide(10000)})\n","  return image.addBands(evi)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8wv7wCyr8gvP"},"outputs":[],"source":["#rename EVI band\n","s2EVI = composites.map(addEVI);\n","s2EVI = s2EVI.select(['constant'],['EVI'])\n","composite = s2EVI.select('EVI').toBands().unmask(ee.Image.constant(0)).clip(geometry)\n"]},{"cell_type":"markdown","metadata":{"id":"_qRU5tAIB-Ma"},"source":["#### Load geometry for export\n","\n","This will either be one large polygon that will be broken up into smaller components for large-scale imagery generation (inference), or it will be a series of training polygons collected via hand. "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dSXOtaa4Bxe-"},"outputs":[],"source":["# Define one booleans to govern whether s2 imagery should be generated over a \n","# inference AOI, or for polygons collected for training. If the polygons are for \n","# training, define another boolean for whether the labels contain irrigation. \n","import shapely\n","\n","geom_for_inference = False\n","irrigated_labels = False\n","\n","\n","def get_squares_from_aoi(aoi, side_length=0.25):\n","    \"\"\"\n","    Divide a AOI (Shapely MultiPolygon) into squares of equal area.\n","    AOI must be in EPSG:4326 crs.\n","\n","    1 degree = 111km \n","    0.25 degree = 25km = 25000m = 2500 s2 pixels\n","\n","    `side_length` : required side of square\n","    \"\"\"\n","    rect_coords = np.array(aoi.boundary.coords.xy)\n","    y_list = rect_coords[1]\n","    x_list = rect_coords[0]\n","    y1 = min(y_list)\n","    y2 = max(y_list)\n","    x1 = min(x_list)\n","    x2 = max(x_list)\n","    width = x2 - x1\n","    height = y2 - y1\n","\n","\n","    xcells = int(np.round(width / side_length))\n","    ycells = int(np.round(height / side_length))\n","\n","    geom_list = []\n","    ee_geom_list = []\n","\n","    for x in range(xcells):\n","        for y in range(ycells):\n","            ee_cell =  ee.Geometry.Rectangle(\n","                    x*side_length + x1,\n","                    y*side_length + y1,\n","                    (x+1)*side_length + x1,\n","                    (y+1)*side_length + y1\n","            )\n","\n","            cell = box(x*side_length + x1,\n","                       y*side_length + y1,\n","                       (x+1)*side_length + x1,\n","                       (y+1)*side_length + y1)\n","\n","            ee_geom_list.append(ee_cell)\n","            geom_list.append(cell) \n","\n","    centroids = [i.centroid for i in geom_list]\n","\n","    gdf_dict = {'id':range(len(geom_list)),\n","                'side_length_deg': side_length,\n","                'centroids': centroids,\n","                'ee_geometry': ee_geom_list,\n","                'geometry':geom_list}\n","    gdf = gpd.GeoDataFrame(gdf_dict, crs='EPSG:4326')\n","\n","    return gdf\n","\n","\n","if geom_for_inference:\n","    geometry_filename = f'gs://{bucket_name}/shapefiles/tana_100km_bbox.geojson'\n","    image_save_prefix = f'raw_imagery/imagery_for_inference/tana_10k'\n","\n","    full_geom_gdf = gpd.read_file(geometry_filename).explode(index_parts=True)\n","\n","    aoi = full_geom_gdf['geometry'].iloc[0]\n","    gdf = get_squares_from_aoi(aoi)\n","    gdf = gdf.to_crs(utm_crs)\n","\n","\n","else:\n","    if irrigated_labels:\n","        irrig_str = 'irrig'\n","    else:\n","        irrig_str = 'noirrig'\n","\n","    geometry_filename = f'gs://gee_irrigation_detection/shapefiles/tana_10k_{irrig_str}_2020.geojson'\n","    image_save_prefix = f'raw_imagery/imagery_for_labels/tana_10k/{irrig_str}'\n","        \n","    gdf = gpd.read_file(geometry_filename)\n","    centroids = [i.centroid for i in gdf['geometry']]\n","    gdf['centroids'] = centroids\n","\n","    # Extract geometries and convert to ee.Geometry format\n","    geom_json_list = [shapely.geometry.mapping(i) for i in \n","                      gdf['geometry']] \n","    ee_geom_list = [ee.Geometry.Polygon(i[\"coordinates\"]) for i in geom_json_list]\n","    gdf['ee_geometry'] = ee_geom_list\n","\n","    gdf = gdf.to_crs(utm_crs)\n","    gdf['id'] = range(len(gdf))"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NPkhqZ6QyhJW","outputId":"1d72a6b2-43da-4c56-e4ad-8feb09bbe2f9","executionInfo":{"status":"ok","timestamp":1671685274252,"user_tz":360,"elapsed":411774,"user":{"displayName":"Terence Conlon","userId":"08804272709395281283"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["\r  0%|          | 0/3 [00:00<?, ?it/s]"]},{"output_type":"stream","name":"stdout","text":["{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684862756, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684862756, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684862756, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684862756, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684862756, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684862756, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684920486, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684926966, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684926966, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684926966, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684926966, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684926966, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684984869, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671684984869, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n"]},{"output_type":"stream","name":"stderr","text":["\r 33%|███▎      | 1/3 [02:24<04:48, 144.11s/it]"]},{"output_type":"stream","name":"stdout","text":["{'state': 'COMPLETED', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671684862756, 'update_timestamp_ms': 1671685005349, 'start_timestamp_ms': 1671684920410, 'task_type': 'EXPORT_IMAGE', 'destination_uris': ['https://console.developers.google.com/storage/browser/gee_irrigation_detection/raw_imagery/imagery_for_labels/tana_10k/noirrig/'], 'attempt': 1, 'batch_eecu_usage_seconds': 6.253219127655029, 'id': 'TUFUJURHQO4WVU2W33QZLFTW', 'name': 'projects/earthengine-legacy/operations/TUFUJURHQO4WVU2W33QZLFTW'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685006742, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685006742, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685006742, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685031994, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685038795, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685038795, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685038795, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685038795, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685038795, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n"]},{"output_type":"stream","name":"stderr","text":["\r 67%|██████▋   | 2/3 [03:57<01:54, 114.07s/it]"]},{"output_type":"stream","name":"stdout","text":["{'state': 'COMPLETED', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685006742, 'update_timestamp_ms': 1671685089762, 'start_timestamp_ms': 1671685031917, 'task_type': 'EXPORT_IMAGE', 'destination_uris': ['https://console.developers.google.com/storage/browser/gee_irrigation_detection/raw_imagery/imagery_for_labels/tana_10k/noirrig/'], 'attempt': 1, 'batch_eecu_usage_seconds': 6.945940017700195, 'id': 'JWDDQILYT4Z3YEUEMAQ2PKKF', 'name': 'projects/earthengine-legacy/operations/JWDDQILYT4Z3YEUEMAQ2PKKF'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685099779, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685099779, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685099779, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685099779, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'READY', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685099779, 'start_timestamp_ms': 0, 'task_type': 'EXPORT_IMAGE', 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685150655, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685150655, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685150655, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685150655, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685150655, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685150655, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685208933, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685208933, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685208933, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685208933, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685208933, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n","{'state': 'RUNNING', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685208933, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'attempt': 1, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 3/3 [06:51<00:00, 137.20s/it]"]},{"output_type":"stream","name":"stdout","text":["{'state': 'COMPLETED', 'description': 'imageToCloudExample', 'creation_timestamp_ms': 1671685099779, 'update_timestamp_ms': 1671685267349, 'start_timestamp_ms': 1671685143835, 'task_type': 'EXPORT_IMAGE', 'destination_uris': ['https://console.developers.google.com/storage/browser/gee_irrigation_detection/raw_imagery/imagery_for_labels/tana_10k/noirrig/'], 'attempt': 1, 'batch_eecu_usage_seconds': 7.205606937408447, 'id': 'Z5JWX6VUT2DM3QGI5FEGL4IG', 'name': 'projects/earthengine-legacy/operations/Z5JWX6VUT2DM3QGI5FEGL4IG'}\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}],"source":["## Iterate through the geometries for uploading S2 composites \n","\n","\n","## Need to do first 3\n","for ix in tqdm(range(0, 3)): ## Up to len(gdf)\n","\n","\n","    id = gdf['id'].iloc[ix]\n","    x_c = np.round(gdf['centroids'].iloc[ix].x, decimals=3)\n","    y_c = np.round(gdf['centroids'].iloc[ix].x, decimals=3)\n","    export_geometry = gdf['ee_geometry'].iloc[ix].transform(utm_crs, maxError=3)\n","\n","    # # Setup the task.\n","    image_task = ee.batch.Export.image.toCloudStorage(\n","    image=composite,\n","    description='imageToCloudExample',\n","    fileNamePrefix=f'{image_save_prefix}/s2_timeseries_id_{id}_x_{x_c}_y_{y_c}',\n","    bucket=bucket_name,\n","    scale=10,\n","    crs=utm_crs,\n","    region=export_geometry,\n","    fileFormat='GeoTIFF',\n","    formatOptions= {\n","        'cloudOptimized': True,\n","        }\n","    )\n","    ## Start task\n","    image_task.start()\n","\n","    # Monitor the task.\n","    while image_task.status()['state'] in ['READY', 'RUNNING']:\n","        print(image_task.status())\n","        time.sleep(10)\n","    else:  \n","        print(image_task.status())\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"jSbtgeXX2h3e"},"outputs":[],"source":["## Not sure how to cancel operations\n","# ee.data.listOperations()\n","# ee.data.cancelOperation('projects/earthengine-legacy/operations/RFES7VXEEFBYDF33E4CNGMRS')"]}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}